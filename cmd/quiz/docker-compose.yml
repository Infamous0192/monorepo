version: '3.8'

services:
  quiz-service:
    build:
      context: ../..
      dockerfile: cmd/quiz/Dockerfile
      target: development
    container_name: quiz-service
    restart: unless-stopped
    ports:
      - "8082:8080"
    environment:
      - APP_API_KEY=${APP_API_KEY:-dev-api-key}
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - DB_NAME=${POSTGRES_DB:-quiz_db}
      - API_KEY=${API_KEY:-dev-api-key}
    volumes:
      - ../../:/app:delegated
      - go-modules:/go/pkg/mod
      - ./.env:/app/.env:ro

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-quiz_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../scripts/init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - "8088:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@admin.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

volumes:
  postgres_data:
  go-modules:
  pgadmin_data: 