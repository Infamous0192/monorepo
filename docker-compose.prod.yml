version: '3.8'

services:
  telegram-service:
    build:
      context: .
      dockerfile: cmd/telegram/Dockerfile
      target: alpine  # Use the final production stage
    restart: always
    environment:
      - SERVER_PORT=8080
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    # No volumes in production

  chat-service:
    build:
      context: .
      dockerfile: cmd/chat/Dockerfile
      target: alpine  # Use the final production stage
    restart: always
    environment:
      - SERVER_PORT=8080
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    # No volumes in production

  quiz-service:
    build:
      context: .
      dockerfile: cmd/quiz/Dockerfile
      target: production
    container_name: quiz-service-prod
    restart: unless-stopped
    ports:
      - "8082:8080"
    environment:
      - APP_API_KEY=${APP_API_KEY}
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - API_KEY=${API_KEY}
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    container_name: postgres-prod
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh

# Other services remain the same 

volumes:
  postgres_data: 