version: '3.8'

services:
  telegram-service:
    build:
      context: .
      dockerfile: cmd/telegram/Dockerfile
      target: development  # Specify the development stage for hot reloading
    container_name: telegram-service
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8443:8443" # For Telegram webhooks
    environment:
      - APP_API_KEY=${APP_API_KEY}
      - SERVER_PORT=8080
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./:/app:delegated  # Use delegated mode for better performance
      - go-modules:/go/pkg/mod  # Cache Go modules
    depends_on:
      - mongodb
      - redis

  chat-service:
    build:
      context: .
      dockerfile: cmd/chat/Dockerfile
      target: development  # Specify the development stage for hot reloading
    container_name: chat-service
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      - APP_API_KEY=${APP_API_KEY}
      - SERVER_PORT=8080
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./:/app:delegated  # Use delegated mode for better performance
      - go-modules:/go/pkg/mod  # Cache Go modules
    depends_on:
      - mongodb
      - redis

  quiz-service:
    build:
      context: .
      dockerfile: cmd/quiz/Dockerfile
      target: development  # Specify the development stage for hot reloading
    container_name: quiz-service
    restart: unless-stopped
    ports:
      - "8082:8080"
    environment:
      - APP_API_KEY=${APP_API_KEY}
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - API_KEY=${API_KEY}
    volumes:
      - ./:/app:delegated  # Use delegated mode for better performance
      - go-modules:/go/pkg/mod  # Cache Go modules
    depends_on:
      - postgres

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh

volumes:
  mongodb_data:
  redis_data:
  go-modules:  # Volume for caching Go modules
  postgres_data:
